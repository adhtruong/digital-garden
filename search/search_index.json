{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Digital Garden","text":"<p>Collection of notes.</p>"},{"location":"tools/dotfiles/","title":"Dotfiles","text":"<p>Configuration for tools and application. Named after prefix given, e.g. <code>.gitconfig</code>.</p>"},{"location":"tools/dotfiles/#management","title":"Management","text":"<ul> <li>These can be managed via source control.</li> <li>These can be either managed with</li> <li>GNU Stow to be symlinked in the correct path</li> <li>Or scripts where symlinking is not appropriate</li> </ul>"},{"location":"tools/git-hooks/","title":"Git Hooks","text":"<p>These are scripts that can run when actions occur in git.</p> <p>These are be defined in various ways including</p> <ol> <li>Scripts in <code>.git/hooks</code></li> <li>Managed by <code>husky</code></li> <li>Managed by pre-commit</li> </ol>"},{"location":"tools/git-hooks/#mirroring-pre-commit","title":"Mirroring pre-commit","text":"<ul> <li>Some tools do not support pre-commit or do not tag properly.</li> <li>This can be managed by pre-commit-mirror-maker to generate appropriate hooks.</li> </ul>"},{"location":"tools/git-hooks/#configuring-a-specific-stage","title":"Configuring a specific stage","text":"<pre><code>default_stages: [pre-commit]\ndefault_install_hook_types: [pre-commit, commit-msg]\nrepos:\n  - repo: https://github.com/adhtruong/mirrors-typos\n    rev: v1.36.2\n    hooks:\n      - id: typos\n      - id: typos\n        name: commit-msg-typos\n        stages: [commit-msg]\n        args: []\n</code></pre>"},{"location":"tools/karabiner/","title":"Karabiner","text":"<p>Karabiner is a macOS application for keyboard customization and key remapping.</p>"},{"location":"tools/karabiner/#karabinerts","title":"karabiner.ts","text":"<p>For more complex configurations, tools like karabiner.ts can be used to allow code to manage rather than relying on just the JSON format.</p>"},{"location":"tools/karabiner/#layers","title":"Layers","text":"<p>With this, you can more easily create layers. This is useful as ensures new shortcuts do not clash with existing app shortcuts.</p>"},{"location":"tools/karabiner/#keybindings-to-use-for-prefix","title":"Keybindings to use for prefix","text":"<ol> <li>Ctrl+w + [key]: Used as a modifier combination that doesn't conflict since most programs use Ctrl+W as a standalone command rather than as part of a chord.</li> <li>Tab (hold) + [key]: Holding Tab activates a layer while still allowing normal Tab functionality when tapped.</li> </ol> <p>These allow easy access whilst not clashing with existing shortcuts.</p>"},{"location":"tools/karabiner/#window-management-layer","title":"Window management layer","text":"<p>Use Rectangle to expose functionality to move windows to portion of screen.</p> <p>Bind to <code>Ctrl+w+[hjkl]</code> for vim style movement.</p>"},{"location":"tools/karabiner/#switching-layer","title":"Switching layer","text":"<p>The layers enable various navigation patterns:</p> <ol> <li>Application Launching: Direct keys to open specific applications (e.g., 'c' for Chrome)</li> <li>Window Management: Keys for navigating between application windows (e.g., 'o' for going to previous window).</li> <li>Smart Tab Launching: Commands to find or open specific website instances in tabs, ensuring single-instance behavior (e.g., 'm' to focus or open Spotify tab). This requires a custom script.</li> </ol>"}]}